<!DOCTYPE html>
<html>
    <head>
        <title>Server Query</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            body {
                width: 800px;
                margin: 0 auto;
                padding: 8px;
                font-family: Helvetica, sans-serif;
            }
            code {
                color: #f33;
            }
            pre {
                padding: 4px 12px;
                border: 1px solid #fff;
                background: #000;
                color: #fff;
            }
            table, th, td {
                border: 1px solid #aaa;
                text-align: left;
            }
            table {
                width: 100%;
            }
            th {
                background: #eee;
                padding: 1px 4px;
            }
            td {
                padding: 2px 4px;
                font-family: monospace;
                color: #f33;
            }
            td:first-child {
                text-align: right;
                font-weight: bold;
            }
            td:last-child {
                font-family: sans-serif;
                color: #000;
            }
        </style>
    </head>
    <body>
        <h1>Server Query</h1>
        <p>This is a very basic game server query framework. It's designed to be easily extendable to accommodate more games.</p>
        <h2>Installation</h2>
        <ol>
            <li>
                Upload the <code>serverquery/</code> directory to your website
                <ol type="a">
                    <li>Make sure the <code>serverquery/cache/</code> directory is writable</li>
                </ol>
            </li>
            <li>
                Edit the <code>config.php</code> file with your settings, games, and servers
                <ol type="a">
                    <li>Edit <code>template.php</code> and/or <code>serverquery.css</code> as needed</li>
                </ol>
            </li>
            <li>Include <code>serverquery/serverquery.php</code> using <code>include</code> or <code>require</code> somewhere on your webpage</li>
        </ol>
        <h2>Configuration</h2>
        <p>All configuration settings are in <code>config.php</code>. Each option is well documented in a docblock, so refer to those for details.</p>
        <h3>Game Configurations</h3>
        <p>Each game class can accept an array of options specific to that game engine. Each array in <code>$games</code> and <code>$servers</code> can have a <code>config</code> key that is an associative array of options. Options set in <code>$servers</code> override options set in <code>$games</code>.</p>
        <p>Here are the available options and default settings for each included game class:</p>
        <table cellspacing="0">
            <tr>
                <th>Option</th>
                <th>Type</th>
                <th>Default</th>
                <th>Description</th>
            </tr>
            <tr>
                <th colspan="4">Valve</th>
            </tr>
            <tr>
                <td>hideBots</td>
                <td>boolean</td>
                <td>true</td>
                <td>Hide bots from player count and list</td>
            </tr>
            <tr>
                <th colspan="4">Minecraft</th>
            </tr>
            <tr>
                <td>useQuery</td>
                <td>boolean</td>
                <td>false</td>
                <td>Use the Query protocol (server must set <code>enable-query=true</code>)</td>
            </tr>
            <tr>
                <td>queryPort</td>
                <td>integer</td>
                <td>25565</td>
                <td>Port used by the Query protocol (server <code>query.port</code> property)</td>
            </tr>
            <tr>
                <th colspan="4">TShock (Terraria server)</th>
            </tr>
            <tr>
                <td>queryPort</td>
                <td>integer</td>
                <td>7878</td>
                <td>Port used to query the server REST API</td>
            </tr>
        </table>
        <h2>Cron Mode</h2>
        <p>With cron mode enabled, the servers must be queried by <code>cron.php</code>. For best results, execute the script once every 1 minute.</p>
        <p>On linux, this can be achieved by adding a line to your crontab like the one below.</p>
        <pre>* * * * * php /path/to/cron.php > /dev/null 2>&1</pre>
    </body>
</html>
